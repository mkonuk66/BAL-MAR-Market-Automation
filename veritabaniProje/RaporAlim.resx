<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAABJVJREFUeF7t
        3NvLbWMUBvAPRdhKTkXKqZTcyiGECxdSopQb14gUEaFdDikp4q9Aciil/Afad5TcYG9kt52unA/hefLt
        xmgY31prvu9cY63xGk/9LvZqzTHHXG/z9M757Z1KpVKpVDaQv5P6E+6E4eJtbBZDDoq3oZkMNyjeRmYz
        1KB4G5jRMIPibVxWQwyKt2GZ/OH8+w5IG70xGd0OdlBS7yl6QzJihhoUvREZHc0wg6I3ICOdIQZFN5+R
        TfpB0Y1n5CX1oOimM9oraQdFN5zRoqQcFN1sRsuSblB0oxmtklSDopvMaNWkGRTdYEZTkmJQdHMZTc3W
        D4puLKOWbPWg6KYyas3WDopuKKOebOWg6GYy6s3WDYpupIiNDYrXTPkX95zweI0UER6viSLC4zVRRHi8
        JooIj9dEEeHxmigiPF4TRYTHa6KI8HhNFBEer4kiwuM1UUR4vCaKCI/XRBHh8ZooIjxeE0WEx2uiiPB4
        TRQRHq+JIsLjNVFEeLwmigiP10QR4fGaKCI8XhNFhMdroojweE0UER6viSLC4zVRRHi8JooIj9dEEeHx
        migiPF4TRRwLofGaKOITeBTOhJB4TZT/+hWeg5NhrfFWXvb2BdwCa4u30pH9DG8BD0PX7X6m8bOH4U34
        Zfcz6y94Co6B2eOtcESH4BE4DXTs93ROhweBe4X9Hr0Gx8Os8VY0Ev7h5suw17Hfft/LSfAk8Dxiv/8K
        zLqn2BWM5Eu4DBbFLrMoV8IRsMs8C7PFFh8FL1cvgGWxyy3L+fAx2OVuhlliC4+Ae8Y5sErssquEg/I1
        6OU+h33QHV10BDxnXAurxi6/aq6C30Ev+wJ0RxccwX6YErv8lDwPetmfgFdmXdEFszsMJ8KU2BpTwkMU
        D496ed7fdEUXy+4BmBpbY2oeAr0873e6LoN1scx4B94yz2TrTM0ZYO9PLoXm6EKZvQstsXVa8jboGvdB
        c3ShzO6Hltg6LeGUjK7BKZXm6EKZXQ0tsXVaYicpD0BzdKHMLoKWeLV6HYTmeAUzan1w5NXqxfuR5ngF
        M2qdBrf3EXPgVVdzvIIZ8fKzJTfB3IPyLTTHK5jR5bCpXA+6lw+hObpQZnfBpvIY6F5eh+boQpm9CpvK
        O6B74X1Jc3ShzH6Atb+i44Tva9mXIZY9pVwYXSi7rimLxjwOugdOLna97aiLZcfn3adAVPjyg71Cewa6
        oouNgG+HROVF0Ovmoets6IouOILf4BpYd/gIl/9hv173S9AdXXAU38GFsK5w3oxPJ/U6ebg8Fbqji47k
        IzgP5s65wMlDvS6+WnorzBJdeDTfwJQ3UJblBvgK7Hp4LpkttvhoeE55AnreweX9zdNgzxn0BhwHs8Wu
        YFSfwd0w5WU2fpdvwtuX4o7iYJwAs8Zb0ch+BD5ivQeugLOAew/3gouBhzi+vfIeLPpzBB6mZt0zRs+N
        8Cl4P2gPXk3dBpWG8E6af4bGeS7vx52CewvvM2a5tP2/hz8izwU8j3g/9iKcm+J0SPcdeMXPJXAvcLr+
        feAPzmfgvBr7Hj4APs/gFDpnbRsmCnd2/gF0khU/Mz19OAAAAABJRU5ErkJggg==
</value>
  </data>
</root>