<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAASVSURBVHhe7dzby21jFAbwD0XYSk5FyqmU3MohhAsXUqKUG9eIFBGhXQ4pKeKvQHIopfwH2neU
        3GBvZLedrpwP4Xny7cZoGN9aa77vXGOt8RpP/S72as0xx1xv8/TO+e2dSqVSqVQ2kL+T+hPuhOHibWwW
        Qw6Kt6GZDDco3kZmM9SgeBuY0TCD4m1cVkMMirdhmfzh/PsOSBu9MRndDnZQUu8pekMyYoYaFL0RGR3N
        MIOiNyAjnSEGRTefkU36QdGNZ+Ql9aDopjPaK2kHRTec0aKkHBTdbEbLkm5QdKMZrZJUg6KbzGjVpBkU
        3WBGU5JiUHRzGU3N1g+Kbiyjlmz1oOimMmrN1g6KbiijnmzloOhmMurN1g2KbqSIjQ2K10z5F/ec8HiN
        FBEer4kiwuM1UUR4vCaKCI/XRBHh8ZooIjxeE0WEx2uiiPB4TRQRHq+JIsLjNVFEeLwmigiP10QR4fGa
        KCI8XhNFhMdroojweE0UER6viSLC4zVRRHi8JooIj9dEEeHxmigiPF4TRYTHa6KI8HhNFBEer4kiwuM1
        UUR4vCaKCI/XRBHh8ZooIjxeE0UcC6HxmijiE3gUzoSQeE2U//oVnoOTYa3xVl729gXcAmuLt9KR/Qxv
        AQ9D1+1+pvGzh+FN+GX3M+sveAqOgdnjrXBEh+AROA107Pd0TocHgXuF/R69BsfDrPFWNBL+4ebLsNex
        337fy0nwJPA8Yr//Csy6p9gVjORLuAwWxS6zKFfCEbDLPAuzxRYfBS9XL4Blscsty/nwMdjlboZZYguP
        gHvGObBK7LKrhIPyNejlPod90B1ddAQ8Z1wLq8Yuv2qugt9BL/sCdEcXHMF+mBK7/JQ8D3rZn4BXZl3R
        BbM7DCfClNgaU8JDFA+Penne33RFF8vuAZgaW2NqHgK9PO93ui6DdbHMeAfeMs9k60zNGWDvTy6F5uhC
        mb0LLbF1WvI26Br3QXN0oczuh5bYOi3hlIyuwSmV5uhCmV0NLbF1WmInKQ9Ac3ShzC6Clni1eh2E5ngF
        M2p9cOTV6sX7keZ4BTNqnQa39xFz4FVXc7yCGfHysyU3wdyD8i00xyuY0eWwqVwPupcPoTm6UGZ3waby
        GOheXofm6EKZvQqbyjuge+F9SXN0ocx+gLW/ouOE72vZlyGWPaVcGF0ou64pi8Y8DroHTi52ve2oi2XH
        592nQFT48oO9QnsGuqKLjYBvh0TlRdDr5qHrbOiKLjiC3+AaWHf4CJf/Yb9e90vQHV1wFN/BhbCucN6M
        Tyf1Onm4PBW6o4uO5CM4D+bOucDJQ70uvlp6K8wSXXg038CUN1CW5Qb4Cux6eC6ZLbb4aHhOeQJ63sHl
        /c3TYM8Z9AYcB7PFrmBUn8HdMOVlNn6Xb8Lbl+KO4mCcALPGW9HIfgQ+Yr0HroCzgHsP94KLgYc4vr3y
        Hiz6cwQepmbdM0bPjfApeD9oD15N3QaVhvBOmn+Gxnku78edgnsL7zNmubT9v4c/Is8FPI94P/YinJvi
        dEj3HXjFzyVwL3C6/n3gD85n4Lwa+x4+AD7P4BQ6Z20bJgp3dv4BdJIVPzM9fTgAAAAASUVORK5CYII=
</value>
  </data>
</root>