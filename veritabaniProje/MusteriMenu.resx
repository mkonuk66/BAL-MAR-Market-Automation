<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAABGdBTUEAALGPC/xhBQAAA51JREFUaEPt
        20nITWEcx/GXCCE7G5QpG8qYjIlYycIQsiNLSdkoypCljWIhkZTE1pSZknlD5pIhMitD5un7q/fq9PQ7
        994z8D6n3l996u32nOv/3HvOc875n6ulPe1pT3sapCdmYxsu4SE+trqHnZiIyqc71uAdfjdhFzqjkhmC
        +3ATq2c3KpdheAk3oWa8xVnMRfTphhtwE8ljM6LOBrjCi1iCKNMFL+CKLuIZtOdElwVwBZchyuN5K1yx
        ZdiO6HIVrtgyXEZ0eQpXbBl0mosun+GKLcMXRJcPcMWW4T2iyy24YstwB9FlB1yxZdCNRXSZBVdsGXR7
        GV100/ALruAi9J5DEV1OwhVchmOILo/gii2DuiTR5ThcsWU4iuiyAq7YMixHdOmKM3AFF3EKuvWMNvvh
        Cs9jH6LPIrji81iI6NMJ1+EmkMVNVKZtOwNFLkJ+YhoqlY1wk2lETyfGoXLpiC1wk3K+Yhk6oNJxkwup
        ozEBLvoARkMt4NPQrWLt2dTt1tfWYxSiiJtg0hsMRxhNdD7uwm3n6MOYhzbdS1xhNWrdjEWYQdCx7LZp
        xgUMQJvEFVTjLhknoYyG/mv895V+OlwxcgLhrjcV3+DG56GFcAr+SwbjMVwhOs+OQDLajfWtuPFFvMI/
        3b17YRXqdTH3Ihl9080eswfRB31xuPW1Rs6j1IWsB/RsSRf7Ol24fzRJu24yWo3dOEcTraUf3Bin8POp
        3liKA8jShH8AXZTUok8+y6knjBvj6JydOSpuJg7hB9wbN6IftySjiwo3Lk0YNybNSDSdMbgC90ZZLEYy
        WR+ih3Fj0qxDU1mJ73BvklW4OuvS0I1LE8aNSaPOasOshts4L62wyaQdv7XVOGvqrd4NH9nowkHnTLdx
        XuHPF/SgzI1LrsZZk7Z6130opwXqGtyGRegHa8lEM+F6l4VFDEQyabu0dss8k9Zkj8C9Z91dehPcRkWN
        RzJqw7pxacK4MWnqLloX4TYqKvzdlW7e3bg0YdyYNGuRmidwGxW1B8moU+HGpQnjxqRxjYa/+QS3UVHP
        kbyQ1986ttxYJ4wb4+gXCtFEbRlXpJP35mEOoom+ZbVlXKGh2updbzUOnUNyr4oi/VHkZ8dp1FRQcyHK
        qB2jtowrPA+912REHf3/h7KaeGGjIdqoB6W2jJtIM3TM6hCpVLTIqC2jToWblKNTT1Srcd6oU6Gbd10a
        6gNQg1D0t17TFVR4n23S0vIHvkxTJtiFBA0AAAAASUVORK5CYII=
</value>
  </data>
</root>